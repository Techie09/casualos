version: 0.2

env:
    secrets-manager:
        MAGIC_SECRET_KEY: codebuild/publish-casualos-me:MAGIC_SECRET_KEY

phases:
    install:
        runtime-versions:
            nodejs: 14
        commands:
            - echo Executing Install Phase
        finally:
            - echo Executing Install Finally
    pre_build:
        commands:
            - echo Executing Pre Build Phase
            - npm ci
            - npm run bootstrap
        finally:
            - echo Executing Pre Build Finally
    build:
        commands:
            - echo Executing Build Phase

            - echo Building packages...
            - npm run build:libs
            - npm run build:auth
        finally:
            - echo Executing Build Finally
    post_build:
        commands:
            - echo Executing Post Build Phase
            - echo Copying Site to S3...
            - aws s3 sync src/aux-auth/web/dist $S3_BUCKET --delete
            - aws s3 cp src/aux-auth/web/dist/terms $S3_BUCKET/terms --content-type text/plain
            - aws s3 cp src/aux-auth/web/dist/privacy-policy $S3_BUCKET/privacy-policy --content-type text/plain
            - aws s3 cp src/aux-auth/web/dist/acceptable-use-policy $S3_BUCKET/acceptable-use-policy --content-type text/plain

            - echo Deploying Lambda...
            - cd src/aux-auth/serverless/aws

            # Remove tests and original source
            - rm -rf ./__tests__
            - rm -rf ./src
            - rm -rf ./events
            - sam package --template-file template.yml --s3-bucket $LAMBDA_S3_BUCKET --output-template-file template-out.yaml
            - |
                sam deploy --template-file template-out.yaml --stack-name $STACK_NAME \
                  --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset \
                  --no-execute-changeset \
                  --parameter-overrides MagicSecretKeyParameter=$MAGIC_SECRET_KEY RedisPortParameter=$REDIS_PORT RedisHostParameter="$REDIS_HOST" RedisUseTLSParameter=$REDIS_USE_TLS RedisRecordsNamespaceParameter=$REDIS_RECORDS_NAMESPACE RedisPasswordParameter="$REDIS_PASSWORD" \
                  --tags Customer=casualos

            # - aws cloudformation deploy --template-file template.yml --stack-name $STACK_NAME --s3-bucket $LAMBDA_S3_BUCKET --no-execute-changeset --parameter-overrides MagicSecretKeyParameter=$MAGIC_SECRET_KEY

            - echo Invalidating CloudFront...
            - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION --paths "/*"
            - echo Done!
        finally:
            - echo Executing Post Build Finally
