version: 0.2

env:
    secrets-manager:
        DOCKERHUB_USER: codebuild/publish-casualos-docker:DOCKERHUB_USER
        DOCKERHUB_TOKEN: codebuild/publish-casualos-docker:DOCKERHUB_TOKEN
        GITHUB_USER: codebuild/publish-casualos-docker:GITHUB_USER
        GITHUB_TOKEN: codebuild/publish-casualos-docker:GITHUB_TOKEN

phases:
    install:
        runtime-versions:
            nodejs: 14
        commands:
            - echo Executing Install Phase
            - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
            - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
        finally:
            - echo Executing Install Finally
    pre_build:
        commands:
            - echo Executing Pre Build Phase
            - npm ci
            - npm run bootstrap
            - cd docs && yarn
        finally:
            - echo Executing Pre Build Finally
    build:
        commands:
            - echo Executing Build Phase
            - npm run build
            - 'GIT_TAG=$(git describe --abbrev=0 --tags)'
            - 'docker build -t casualos -f Dockerfile.arm32 .'
            - 'docker tag casualos -t casualsimulation/aux-arm32:$GIT_TAG'
            - 'docker tag casualos -t casualsimulation/aux-arm32:latest'
            - 'docker tag casualos -t casualsimulation/aux-arm32:alpha'
            - 'docker tag casualos -t ghcr.io/casual-simulation/casualos-arm32:$GIT_TAG'
            - 'docker tag casualos -t ghcr.io/casual-simulation/casualos-arm32:latest'
            - 'docker tag casualos -t ghcr.io/casual-simulation/casualos-arm32:alpha'
        finally:
            - echo Executing Build Finally
    post_build:
        commands:
            - echo Executing Post Build Phase
            - |
                GIT_BRANCH=`git symbolic-ref HEAD --short 2>/dev/null`
                if [ "$GIT_BRANCH" == "" ] ; then
                  GIT_BRANCH=`git branch -a --contains HEAD | sed -n 2p | awk '{ printf $1 }'`
                  GIT_BRANCH=${GIT_BRANCH#remotes/origin/}
                fi
            - 'GIT_TAG=$(git describe --abbrev=0 --tags)'
            - |
                echo "Login to DockerHub..."
                echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USER" --password-stdin

                echo "Upload to DockerHub..."
                docker push casualsimulation/aux-arm32:$GIT_TAG
                if [ "$GIT_BRANCH" == "master" ] ; then
                  docker push casualsimulation/aux-arm32:latest
                else
                  docker push casualsimulation/aux-arm32:alpha
                fi

                echo "Login to GHCR..."
                echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_USER" --password-stdin

                echo "Upload to GHCR..."
                docker push ghcr.io/casual-simulation/casualos-arm32:$GIT_TAG
                if [ "$GIT_BRANCH" == "master" ] ; then
                  docker push ghcr.io/casual-simulation/casualos-arm32:latest
                else
                  docker push ghcr.io/casual-simulation/casualos-arm32:alpha
                fi
        finally:
            - echo Executing Post Build Finally
